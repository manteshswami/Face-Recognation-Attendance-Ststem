import cv2
import face_recognition
import csv
from datetime import date

# Load the known faces and names from a CSV file
def load_known_faces(csv_file):
    known_faces = []
    known_names = []
    
    with open(csv_file, 'r') as file:
        reader = csv.reader(file)
        for row in reader:
            known_faces.append(face_recognition.face_encodings(face_recognition.load_image_file(row[0]))[0])
            known_names.append(row[1])
    
    return known_faces, known_names

# Initialize variables
video_capture = cv2.VideoCapture(0)
known_faces, known_names = load_known_faces('C:\\Users\\Mantesh\\Desktop\\Atttendace\\face attendance system\\known_faces1.csv')

while True:
    # Capture frame-by-frame
    ret, frame = video_capture.read()

    # Find all face locations and encodings in the current frame
    face_locations = face_recognition.face_locations(frame)
    face_encodings = face_recognition.face_encodings(frame, face_locations)

    # Initialize an empty list to store the names of detected faces
    face_names = []

    for face_encoding in face_encodings:
        # Compare the detected face with known faces
        matches = face_recognition.compare_faces(known_faces, face_encoding)
        name = 'Unknown'  # Default name if no match found

        # If a match is found, use the known name
        if True in matches:
            first_match_index = matches.index(True)
            name = known_names[first_match_index]

        face_names.append(name)

    # Display the results
    for (top, right, bottom, left), name in zip(face_locations, face_names):
        # Draw a rectangle around the face
        cv2.rectangle(frame, (left, top), (right, bottom), (0, 0, 255), 2)

        # Draw the name below the face
        cv2.rectangle(frame, (left, bottom - 35), (right, bottom), (0, 0, 255), cv2.FILLED)
        font = cv2.FONT_HERSHEY_DUPLEX
        cv2.putText(frame, name, (left + 6, bottom - 6), font, 0.8, (255, 255, 255), 1)

        # Log the attendance in a CSV file
        with open('attendance.csv', 'a', newline='') as file:
            writer = csv.writer(file)
            writer.writerow([name, date.today()])

    # Display the resulting image
    cv2.imshow('Attendance System', frame)

    # Exit the loop if 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the video capture and close the windows
video_capture.release()
cv2.destroyAllWindows()